1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia:

SELECT `degrees`.`name`, `students`.`name`, `students`.`surname` , `students`.`email` , `students`.`enrolment_date`, `students`.`registration_number`
FROM `students`
INNER JOIN `degrees`
ON `degrees`.`id` = `students`.`degree_id`
WHERE `degrees`.`name` = 'Corso di Laurea in Economia';


2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze:

SELECT `departments`.`name`, `degrees`.`name`, `degrees`.`level`, `degrees`.`address`
FROM `degrees`
INNER JOIN `departments`
ON `departments`.`id` = `degrees`.`department_id`
WHERE `departments`.`name` = 'Dipartimento di Neuroscienze'
AND `degrees`.`level` = 'magistrale';


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44):

SELECT `teachers`.`id`, `teachers`.`name` AS `teacher_name`, `teachers`.`surname` AS `teacher_surname`, `courses`.`name` AS `courses_name`, `courses`.`period`, `courses`.`year`, `courses`.`cfu`
FROM `teachers`
INNER JOIN `course_teacher`
ON `teachers`.`id` = `course_teacher`.`teacher_id`
INNER JOIN `courses`
ON `courses`.`id` = `course_teacher`.`course_id`
WHERE  `teachers`.`id` = 44;


4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome:

SELECT `students`.`id`, `students`.`name` AS `students_name`, `students`.`surname` AS `students_surname`, `degrees`.`name` AS `degree_name`, `degrees`.`level`, `degrees`.`address` AS `degree_address`, `departments`.`name` AS `department_name`, `departments`.`id` AS `department_id`, `departments`.`address` AS `department_address`
FROM `students`
INNER JOIN `degrees`
ON `degrees`.`id` = `students`.`degree_id`
INNER JOIN `departments`
ON `departments`.`id` = `degrees`.`department_id`
ORDER BY  `students`.`surname`,  `students`.`name`;


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti:

SELECT `degrees`.`name` AS `degree_name`, `degrees`.`level` AS `degree_level`, `degrees`.`address` AS `degree_address`, `courses`.`name` AS `course_name`, `courses`.`period`, `courses`.`year`, `courses`.`cfu`, `teachers`.`id` AS `teacher_id`, `teachers`.`name` AS `teacher_name`, `teachers`.`surname` AS `teacher_surname` 
FROM `teachers` 
INNER JOIN `course_teacher` 
ON `teachers`.`id` = `course_teacher`.`teacher_id` 
INNER JOIN `courses` 
ON `courses`.`id` = `course_teacher`.`course_id` 
INNER JOIN `degrees` 
ON `degrees`.`id` = `courses`.`degree_id`
ORDER BY `degrees`.`name`;


6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)

SELECT DISTINCT `departments`.`name` AS `department_name`, `teachers`.`id` AS `teacher_id`, `teachers`.`name` AS `teacher_name`, `teachers`.`surname` AS `teacher_surname`,`teachers`.`email`, `teachers`.`office_address`, `teachers`.`office_number`
FROM `teachers` 
INNER JOIN `course_teacher` 
ON `teachers`.`id` = `course_teacher`.`teacher_id` 
INNER JOIN `courses` 
ON `courses`.`id` = `course_teacher`.`course_id` 
INNER JOIN `degrees` 
ON `degrees`.`id` = `courses`.`degree_id` 
INNER JOIN `departments` 
ON `departments`.`id` = `degrees`.`department_id` 
WHERE `departments`.`name` = 'Dipartimento di Matematica';


7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti per ogni esame, stampando anche il voto massimo. Successivamente, filtrare i tentativi con voto minimo 18.

SELECT COUNT( `exam_student`.`exam_id`) AS `count_exams`, `students`.`name`, `students`.`surname`, `exam_student`.`exam_id`, `exam_student`.`student_id`, MAX(`exam_student`.`vote`)
FROM `students` 
INNER JOIN `exam_student`
ON `students`.`id` = `exam_student`.`student_id` 
INNER JOIN `exams` 
ON `exams`.`id` = `exam_student`.`exam_id` 
WHERE `exam_student`.`vote` >= 18
GROUP BY `exam_student`.`student_id`, `exam_student`.`exam_id` 
ORDER BY `exam_student`.`exam_id`, `students`.`surname`, `students`.`name`;
